{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAAe,I,wBCGFA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACtB,mCAAOL,EAAMI,QAAQE,KAArB,OACA,kCAAKN,EAAMI,QAAQG,MAAnB,WCHCC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAU,YAAf,SACMD,EAAMS,SAASC,KAAK,SAAAN,GAAO,OACzB,cAAC,EAAD,CAA8BA,QAASA,GAA5BJ,EAAMS,SAASJ,UCP7BM,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOC,KAAK,SACLF,YAAcA,EACdG,SAAWF,KCmCPG,E,kDAhCb,aAAe,IAAD,8BACZ,gBAQFH,aAAe,SAAAI,GACX,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAPvC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,qDAad,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAGhD,WACE,MAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAmBpB,EAASqB,QAAQ,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAErG,OACI,sBAAK9B,UAAU,MAAf,UACI,cAAC,EAAD,CAAWW,YAAY,qBAAqBC,aAAee,KAAKf,eAChE,cAAC,EAAD,CAAUJ,SAAWoB,W,GA5BfI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.02379760.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport './card.styles.css'\n\nexport const Card = (props) => {\n    return (\n        <div className='card-container'>\n            <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2`}/>\n            <h1> { props.monster.name } </h1>\n            <p> {props.monster.email } </p>\n        </div>\n    )\n}\n","import React from 'react';\nimport './card-list.styles.css'\n\nimport {Card} from '../card/card.component'\n\nexport const CardList = (props) => {\n    return (\n        <div className='card-list'>\n            { props.monsters.map( monster => (\n                <Card key={props.monsters.id} monster={monster}></Card>\n            ) ) }\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const SearchBox = ({placeholder, handleChange}) => (\n    <input type=\"search\"\n           placeholder={ placeholder }\n           onChange={ handleChange }\n    />\n);\n","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component'\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  handleChange = e => {\n      this.setState({searchField: e.target.value})\n  }\n\n  componentDidMount() {\n      fetch('https://jsonplaceholder.typicode.com/users')\n          .then(response => response.json() )\n          .then(users => this.setState({monsters: users}) )\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter( monster => monster.name.toLowerCase().includes(searchField.toLowerCase() )  );\n\n    return (\n        <div className=\"App\">\n            <SearchBox placeholder=\"Search monsters...\" handleChange={ this.handleChange }></SearchBox>\n            <CardList monsters={ filteredMonsters }></CardList>\n        </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}